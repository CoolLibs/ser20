load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "doctest",
    hdrs = [
        "common.hpp",
        "doctest.h",
    ],
)

cc_test(
    name = "array",
    srcs = [
        "array.cpp",
        "array.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "atomic",
    srcs = [
        "atomic.cpp",
        "atomic.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "basic_string",
    srcs = [
        "basic_string.cpp",
        "basic_string.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "bitset",
    srcs = [
        "bitset.cpp",
        "bitset.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "binary_archive",
    srcs = [
        "binary_archive.cpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)


cc_test(
    name = "chrono",
    srcs = [
        "chrono.cpp",
        "chrono.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "complex",
    srcs = [
        "complex.cpp",
        "complex.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "defer",
    srcs = [
        "defer.cpp",
        "defer.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "deque",
    srcs = [
        "deque.cpp",
        "deque.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "forward_list",
    srcs = [
        "forward_list.cpp",
        "forward_list.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "list",
    srcs = [
        "list.cpp",
        "list.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "load_construct",
    srcs = [
        "load_construct.cpp",
        "load_construct.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "map",
    srcs = [
        "map.cpp",
        "map.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "memory",
    srcs = [
        "memory.cpp",
        "memory.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "memory_cycles",
    srcs = [
        "memory_cycles.cpp",
        "memory_cycles.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "multimap",
    srcs = [
        "multimap.cpp",
        "multimap.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "multiset",
    srcs = [
        "multiset.cpp",
        "multiset.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "optional",
    srcs = [
        "optional.cpp",
        "optional.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "pair",
    srcs = [
        "pair.cpp",
        "pair.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "pod",
    srcs = [
        "pod.cpp",
        "pod.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "polymorphic",
    srcs = [
        "polymorphic.cpp",
        "polymorphic.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "portable_binary_archive",
    srcs = [
        "portable_binary_archive.cpp",
        "portable_binary_archive.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "priority_queue",
    srcs = [
        "priority_queue.cpp",
        "priority_queue.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "queue",
    srcs = [
        "queue.cpp",
        "queue.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "set",
    srcs = [
        "set.cpp",
        "set.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "stack",
    srcs = [
        "stack.cpp",
        "stack.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "structs",
    srcs = [
        "structs.cpp",
        "structs.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "structs_minimal",
    srcs = [
        "structs_minimal.cpp",
        "structs_minimal.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "structs_specialized",
    srcs = [
        "structs_specialized.cpp",
        "structs_specialized.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "tuple",
    srcs = [
        "tuple.cpp",
        "tuple.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "unordered_loads",
    srcs = [
        "unordered_loads.cpp",
        "unordered_loads.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "unordered_map",
    srcs = [
        "unordered_map.cpp",
        "unordered_map.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "unordered_multimap",
    srcs = [
        "unordered_multimap.cpp",
        "unordered_multimap.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "unordered_multiset",
    srcs = [
        "unordered_multiset.cpp",
        "unordered_multiset.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "unordered_set",
    srcs = [
        "unordered_set.cpp",
        "unordered_set.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "user_data_adapters",
    srcs = [
        "user_data_adapters.cpp",
        "user_data_adapters.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "valarray",
    srcs = [
        "valarray.cpp",
        "valarray.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "variant",
    srcs = [
        "variant.cpp",
        "variant.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "vector",
    srcs = [
        "vector.cpp",
        "vector.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)

cc_test(
    name = "versioning",
    srcs = [
        "versioning.cpp",
        "versioning.hpp",
    ],
    deps = [
        ":doctest",
        "//:ser20",
    ],
)
